; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\fmc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\fmc.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\Library\StdDriver\inc -I..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\Library\CMSIS\Include -I..\bsp\bus\inc -I..\bsp\devices\inc -I..\User\inc -I.\RTE\_DC_Measure -ID:\software\tools\Keil_v5\Nuvoton\NuMicro_DFP\1.3.12\Device\NANO100BN\Include -ID:\software\tools\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=530 -D_RTE_ --omf_browse=.\objects\fmc.crf ..\..\Library\StdDriver\src\fmc.c]
                          THUMB

                          AREA ||i.FMC_Close||, CODE, READONLY, ALIGN=2

                  FMC_Close PROC
;;;36       */
;;;37     void FMC_Close(void)
000000  4802              LDR      r0,|L1.12|
;;;38     {
;;;39         FMC->ISPCON &= ~FMC_ISPCON_ISPEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  0849              LSRS     r1,r1,#1
000006  0049              LSLS     r1,r1,#1
000008  6001              STR      r1,[r0,#0]
;;;40     }
00000a  4770              BX       lr
;;;41     
                          ENDP

                  |L1.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_Erase||, CODE, READONLY, ALIGN=2

                  FMC_Erase PROC
;;;50       */
;;;51     int32_t FMC_Erase(uint32_t u32PageAddr)
000000  490a              LDR      r1,|L2.44|
;;;52     {
;;;53         FMC->ISPCMD = FMC_ISPCMD_PAGE_ERASE;
000002  2222              MOVS     r2,#0x22
000004  60ca              STR      r2,[r1,#0xc]
;;;54         FMC->ISPADR = u32PageAddr;
000006  6048              STR      r0,[r1,#4]
;;;55         FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000008  2001              MOVS     r0,#1
00000a  6108              STR      r0,[r1,#0x10]
                  |L2.12|
;;;56     
;;;57         while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000c  6908              LDR      r0,[r1,#0x10]
00000e  07c0              LSLS     r0,r0,#31
000010  d1fc              BNE      |L2.12|
;;;58     
;;;59         if (FMC->ISPCON & FMC_ISPCON_ISPFF_Msk)
000012  6808              LDR      r0,[r1,#0]
000014  0640              LSLS     r0,r0,#25
000016  d506              BPL      |L2.38|
;;;60         {
;;;61             FMC->ISPCON |= FMC_ISPCON_ISPFF_Msk;
000018  6808              LDR      r0,[r1,#0]
00001a  2240              MOVS     r2,#0x40
00001c  4310              ORRS     r0,r0,r2
00001e  6008              STR      r0,[r1,#0]
;;;62             return -1;
000020  2000              MOVS     r0,#0
000022  43c0              MVNS     r0,r0
;;;63         }
;;;64         return 0;
;;;65     }
000024  4770              BX       lr
                  |L2.38|
000026  2000              MOVS     r0,#0                 ;64
000028  4770              BX       lr
;;;66     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x5000c000

                          AREA ||i.FMC_GetBootSource||, CODE, READONLY, ALIGN=2

                  FMC_GetBootSource PROC
;;;73       */
;;;74     int32_t FMC_GetBootSource (void)
000000  4803              LDR      r0,|L3.16|
;;;75     {
;;;76         if (FMC->ISPCON & FMC_ISPCON_BS_Msk)
000002  6800              LDR      r0,[r0,#0]
000004  0780              LSLS     r0,r0,#30
000006  d501              BPL      |L3.12|
;;;77             return 1;
000008  2001              MOVS     r0,#1
;;;78         else
;;;79             return 0;
;;;80     }
00000a  4770              BX       lr
                  |L3.12|
00000c  2000              MOVS     r0,#0                 ;79
00000e  4770              BX       lr
;;;81     
                          ENDP

                  |L3.16|
                          DCD      0x5000c000

                          AREA ||i.FMC_GetVectorPageAddr||, CODE, READONLY, ALIGN=2

                  FMC_GetVectorPageAddr PROC
;;;200      */
;;;201    uint32_t FMC_GetVectorPageAddr(void)
000000  4802              LDR      r0,|L4.12|
;;;202    {
;;;203        return (FMC->ISPSTA & 0x0FFFFF00ul);
000002  6800              LDR      r0,[r0,#0]
000004  4902              LDR      r1,|L4.16|
000006  4008              ANDS     r0,r0,r1
;;;204    }
000008  4770              BX       lr
;;;205    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x5000c040
                  |L4.16|
                          DCD      0x0fffff00

                          AREA ||i.FMC_Open||, CODE, READONLY, ALIGN=2

                  FMC_Open PROC
;;;86       */
;;;87     void FMC_Open(void)
000000  4802              LDR      r0,|L5.12|
;;;88     {
;;;89         FMC->ISPCON |=  FMC_ISPCON_ISPEN_Msk;
000002  6801              LDR      r1,[r0,#0]
000004  2201              MOVS     r2,#1
000006  4311              ORRS     r1,r1,r2
000008  6001              STR      r1,[r0,#0]
;;;90     }
00000a  4770              BX       lr
;;;91     
                          ENDP

                  |L5.12|
                          DCD      0x5000c000

                          AREA ||i.FMC_Read||, CODE, READONLY, ALIGN=2

                  FMC_Read PROC
;;;98       */
;;;99     uint32_t FMC_Read(uint32_t u32Addr)
000000  4905              LDR      r1,|L6.24|
;;;100    {
;;;101        FMC->ISPCMD = FMC_ISPCMD_READ;
000002  2200              MOVS     r2,#0
000004  60ca              STR      r2,[r1,#0xc]
;;;102        FMC->ISPADR = u32Addr;
000006  6048              STR      r0,[r1,#4]
;;;103        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000008  2001              MOVS     r0,#1
00000a  6108              STR      r0,[r1,#0x10]
                  |L6.12|
;;;104    
;;;105        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000c  6908              LDR      r0,[r1,#0x10]
00000e  07c0              LSLS     r0,r0,#31
000010  d1fc              BNE      |L6.12|
;;;106    
;;;107        return FMC->ISPDAT;
000012  6888              LDR      r0,[r1,#8]
;;;108    }
000014  4770              BX       lr
;;;109    
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      0x5000c000

                          AREA ||i.FMC_ReadCID||, CODE, READONLY, ALIGN=2

                  FMC_ReadCID PROC
;;;114      */
;;;115    uint32_t FMC_ReadCID(void)
000000  4805              LDR      r0,|L7.24|
;;;116    {
;;;117        FMC->ISPCMD = FMC_ISPCMD_READ_CID;
000002  210b              MOVS     r1,#0xb
000004  60c1              STR      r1,[r0,#0xc]
;;;118        FMC->ISPADR = 0x0;
000006  2100              MOVS     r1,#0
000008  6041              STR      r1,[r0,#4]
;;;119        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
00000a  2101              MOVS     r1,#1
00000c  6101              STR      r1,[r0,#0x10]
                  |L7.14|
;;;120        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000e  6901              LDR      r1,[r0,#0x10]
000010  07c9              LSLS     r1,r1,#31
000012  d1fc              BNE      |L7.14|
;;;121        return FMC->ISPDAT;
000014  6880              LDR      r0,[r0,#8]
;;;122    }
000016  4770              BX       lr
;;;123    
                          ENDP

                  |L7.24|
                          DCD      0x5000c000

                          AREA ||i.FMC_ReadConfig||, CODE, READONLY, ALIGN=2

                  FMC_ReadConfig PROC
;;;232      */
;;;233    int32_t FMC_ReadConfig(uint32_t *u32Config, uint32_t u32Count)
000000  b510              PUSH     {r4,lr}
;;;234    {
000002  4603              MOV      r3,r0
;;;235        u32Config[0] = FMC_Read(FMC_CONFIG_BASE);
000004  2003              MOVS     r0,#3
000006  460c              MOV      r4,r1                 ;234
000008  0500              LSLS     r0,r0,#20
00000a  f7fffffe          BL       FMC_Read
;;;236        if (u32Count < 2)
00000e  6018              STR      r0,[r3,#0]
000010  2c02              CMP      r4,#2
000012  d202              BCS      |L8.26|
;;;237            return -1;
000014  2000              MOVS     r0,#0
000016  43c0              MVNS     r0,r0
;;;238        u32Config[1] = FMC_Read(FMC_CONFIG_BASE+4);
;;;239        return 0;
;;;240    }
000018  bd10              POP      {r4,pc}
                  |L8.26|
00001a  4803              LDR      r0,|L8.40|
00001c  f7fffffe          BL       FMC_Read
000020  6058              STR      r0,[r3,#4]            ;239
000022  2000              MOVS     r0,#0                 ;239
000024  bd10              POP      {r4,pc}
;;;241    
                          ENDP

000026  0000              DCW      0x0000
                  |L8.40|
                          DCD      0x00300004

                          AREA ||i.FMC_ReadDataFlashBaseAddr||, CODE, READONLY, ALIGN=2

                  FMC_ReadDataFlashBaseAddr PROC
;;;176      */
;;;177    uint32_t FMC_ReadDataFlashBaseAddr(void)
000000  4801              LDR      r0,|L9.8|
;;;178    {
;;;179        return FMC->DFBADR;
000002  6940              LDR      r0,[r0,#0x14]
;;;180    }
000004  4770              BX       lr
;;;181    
                          ENDP

000006  0000              DCW      0x0000
                  |L9.8|
                          DCD      0x5000c000

                          AREA ||i.FMC_ReadPID||, CODE, READONLY, ALIGN=2

                  FMC_ReadPID PROC
;;;128      */
;;;129    uint32_t FMC_ReadPID(void)
000000  4805              LDR      r0,|L10.24|
;;;130    {
;;;131        FMC->ISPCMD = FMC_ISPCMD_READ_PID;
000002  210c              MOVS     r1,#0xc
000004  60c1              STR      r1,[r0,#0xc]
;;;132        FMC->ISPADR = 0x04;
000006  2104              MOVS     r1,#4
000008  6041              STR      r1,[r0,#4]
;;;133        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
00000a  2101              MOVS     r1,#1
00000c  6101              STR      r1,[r0,#0x10]
                  |L10.14|
;;;134        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000e  6901              LDR      r1,[r0,#0x10]
000010  07c9              LSLS     r1,r1,#31
000012  d1fc              BNE      |L10.14|
;;;135        return FMC->ISPDAT;
000014  6880              LDR      r0,[r0,#8]
;;;136    }
000016  4770              BX       lr
;;;137    
                          ENDP

                  |L10.24|
                          DCD      0x5000c000

                          AREA ||i.FMC_ReadUCID||, CODE, READONLY, ALIGN=2

                  FMC_ReadUCID PROC
;;;143      */
;;;144    uint32_t FMC_ReadUCID(uint32_t u32Index)
000000  4906              LDR      r1,|L11.28|
;;;145    {
;;;146        FMC->ISPCMD = FMC_ISPCMD_READ_UID;
000002  2204              MOVS     r2,#4
000004  60ca              STR      r2,[r1,#0xc]
;;;147        FMC->ISPADR = (0x04 * u32Index) + 0x10;
000006  0080              LSLS     r0,r0,#2
000008  3010              ADDS     r0,r0,#0x10
00000a  6048              STR      r0,[r1,#4]
;;;148        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
00000c  2001              MOVS     r0,#1
00000e  6108              STR      r0,[r1,#0x10]
                  |L11.16|
;;;149    
;;;150        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
000010  6908              LDR      r0,[r1,#0x10]
000012  07c0              LSLS     r0,r0,#31
000014  d1fc              BNE      |L11.16|
;;;151    
;;;152        return FMC->ISPDAT;
000016  6888              LDR      r0,[r1,#8]
;;;153    }
000018  4770              BX       lr
;;;154    
                          ENDP

00001a  0000              DCW      0x0000
                  |L11.28|
                          DCD      0x5000c000

                          AREA ||i.FMC_ReadUID||, CODE, READONLY, ALIGN=2

                  FMC_ReadUID PROC
;;;160      */
;;;161    uint32_t FMC_ReadUID(uint32_t u32Index)
000000  4905              LDR      r1,|L12.24|
;;;162    {
;;;163        FMC->ISPCMD = FMC_ISPCMD_READ_UID;
000002  2204              MOVS     r2,#4
000004  60ca              STR      r2,[r1,#0xc]
;;;164        FMC->ISPADR = 0x04 * u32Index;
000006  0080              LSLS     r0,r0,#2
000008  6048              STR      r0,[r1,#4]
;;;165        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
00000a  2001              MOVS     r0,#1
00000c  6108              STR      r0,[r1,#0x10]
                  |L12.14|
;;;166    
;;;167        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000e  6908              LDR      r0,[r1,#0x10]
000010  07c0              LSLS     r0,r0,#31
000012  d1fc              BNE      |L12.14|
;;;168    
;;;169        return FMC->ISPDAT;
000014  6888              LDR      r0,[r1,#8]
;;;170    }
000016  4770              BX       lr
;;;171    
                          ENDP

                  |L12.24|
                          DCD      0x5000c000

                          AREA ||i.FMC_SetVectorPageAddr||, CODE, READONLY, ALIGN=2

                  FMC_SetVectorPageAddr PROC
;;;187      */
;;;188    void FMC_SetVectorPageAddr(uint32_t u32PageAddr)
000000  4904              LDR      r1,|L13.20|
;;;189    {
;;;190        FMC->ISPCMD = FMC_ISPCMD_VECMAP;
000002  222e              MOVS     r2,#0x2e
000004  60ca              STR      r2,[r1,#0xc]
;;;191        FMC->ISPADR = u32PageAddr;
000006  6048              STR      r0,[r1,#4]
;;;192        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
000008  2001              MOVS     r0,#1
00000a  6108              STR      r0,[r1,#0x10]
                  |L13.12|
;;;193        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000c  6908              LDR      r0,[r1,#0x10]
00000e  07c0              LSLS     r0,r0,#31
000010  d1fc              BNE      |L13.12|
;;;194    }
000012  4770              BX       lr
;;;195    
                          ENDP

                  |L13.20|
                          DCD      0x5000c000

                          AREA ||i.FMC_Write||, CODE, READONLY, ALIGN=2

                  FMC_Write PROC
;;;213      */
;;;214    void FMC_Write(uint32_t u32Addr, uint32_t u32Data)
000000  4a05              LDR      r2,|L14.24|
;;;215    {
;;;216        FMC->ISPCMD = FMC_ISPCMD_PROGRAM;
000002  2321              MOVS     r3,#0x21
000004  60d3              STR      r3,[r2,#0xc]
;;;217        FMC->ISPADR = u32Addr;
000006  6050              STR      r0,[r2,#4]
;;;218        FMC->ISPDAT = u32Data;
000008  6091              STR      r1,[r2,#8]
;;;219        FMC->ISPTRG = FMC_ISPTRG_ISPGO_Msk;
00000a  2001              MOVS     r0,#1
00000c  6110              STR      r0,[r2,#0x10]
                  |L14.14|
;;;220        while (FMC->ISPTRG & FMC_ISPTRG_ISPGO_Msk) ;
00000e  6910              LDR      r0,[r2,#0x10]
000010  07c0              LSLS     r0,r0,#31
000012  d1fc              BNE      |L14.14|
;;;221    }
000014  4770              BX       lr
;;;222    
                          ENDP

000016  0000              DCW      0x0000
                  |L14.24|
                          DCD      0x5000c000

                          AREA ||i.FMC_WriteConfig||, CODE, READONLY, ALIGN=2

                  FMC_WriteConfig PROC
;;;251      */
;;;252    int32_t FMC_WriteConfig(uint32_t *u32Config, uint32_t u32Count)
000000  b570              PUSH     {r4-r6,lr}
;;;253    {
;;;254        FMC_ENABLE_CFG_UPDATE();
000002  4c0b              LDR      r4,|L15.48|
000004  4605              MOV      r5,r0                 ;253
000006  6820              LDR      r0,[r4,#0]
000008  2610              MOVS     r6,#0x10
00000a  4330              ORRS     r0,r0,r6
00000c  6020              STR      r0,[r4,#0]
;;;255        FMC_Erase(FMC_CONFIG_BASE);
00000e  01a3              LSLS     r3,r4,#6
000010  4618              MOV      r0,r3
000012  f7fffffe          BL       FMC_Erase
;;;256        FMC_Write(FMC_CONFIG_BASE, u32Config[0]);
000016  4618              MOV      r0,r3
000018  6829              LDR      r1,[r5,#0]
00001a  f7fffffe          BL       FMC_Write
;;;257        FMC_Write(FMC_CONFIG_BASE+4, u32Config[1]);
00001e  4805              LDR      r0,|L15.52|
000020  6869              LDR      r1,[r5,#4]
000022  f7fffffe          BL       FMC_Write
;;;258        FMC_DISABLE_CFG_UPDATE();
000026  6820              LDR      r0,[r4,#0]
000028  43b0              BICS     r0,r0,r6
00002a  6020              STR      r0,[r4,#0]
;;;259        return 0;
00002c  2000              MOVS     r0,#0
;;;260    }
00002e  bd70              POP      {r4-r6,pc}
;;;261    
                          ENDP

                  |L15.48|
                          DCD      0x5000c000
                  |L15.52|
                          DCD      0x00300004

;*** Start embedded assembler ***

#line 1 "..\\..\\Library\\StdDriver\\src\\fmc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_fmc_c_65c03504____REV16|
#line 388 "..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_fmc_c_65c03504____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_fmc_c_65c03504____REVSH|
#line 402
|__asm___5_fmc_c_65c03504____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
