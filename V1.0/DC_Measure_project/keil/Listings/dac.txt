; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\dac.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\dac.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\Library\StdDriver\inc -I..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\Library\CMSIS\Include -I..\bsp\bus\inc -I..\bsp\devices\inc -I..\User\inc -I.\RTE\_DC_Measure -ID:\software\tools\Keil_v5\Nuvoton\NuMicro_DFP\1.3.12\Device\NANO100BN\Include -ID:\software\tools\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=530 -D_RTE_ --omf_browse=.\objects\dac.crf ..\..\Library\StdDriver\src\dac.c]
                          THUMB

                          AREA ||i.DAC_Close||, CODE, READONLY, ALIGN=2

                  DAC_Close PROC
;;;66       */
;;;67     void DAC_Close(DAC_T *dac, uint32_t u32Ch)
000000  4806              LDR      r0,|L1.28|
;;;68     {
;;;69         if(u32Ch == 0)
000002  2900              CMP      r1,#0
000004  d004              BEQ      |L1.16|
;;;70         {
;;;71             DAC->CTL0 &= ~DAC_CTL_DACEN_Msk;
;;;72         }
;;;73         else
;;;74         {
;;;75             DAC->CTL1 &= ~DAC_CTL_DACEN_Msk;
000006  6901              LDR      r1,[r0,#0x10]
000008  0849              LSRS     r1,r1,#1
00000a  0049              LSLS     r1,r1,#1
00000c  6101              STR      r1,[r0,#0x10]
;;;76         }
;;;77     
;;;78     }
00000e  4770              BX       lr
                  |L1.16|
000010  6801              LDR      r1,[r0,#0]            ;71
000012  0849              LSRS     r1,r1,#1              ;71
000014  0049              LSLS     r1,r1,#1              ;71
000016  6001              STR      r1,[r0,#0]            ;71
000018  4770              BX       lr
;;;79     
                          ENDP

00001a  0000              DCW      0x0000
                  |L1.28|
                          DCD      0x400a0000

                          AREA ||i.DAC_Open||, CODE, READONLY, ALIGN=2

                  DAC_Open PROC
;;;39       */
;;;40     void DAC_Open(DAC_T *dac, uint32_t u32Ch, uint32_t u32TrgSrc)
000000  b5f8              PUSH     {r3-r7,lr}
;;;41     {
000002  4615              MOV      r5,r2
000004  460e              MOV      r6,r1
;;;42         uint32_t u32Delay;
;;;43     
;;;44         // DAC needs 6 us to stable after power on
;;;45         u32Delay = CLK_GetHCLKFreq() * 6 / 1000000;
000006  f7fffffe          BL       CLK_GetHCLKFreq
00000a  2106              MOVS     r1,#6
00000c  4f12              LDR      r7,|L2.88|
00000e  4348              MULS     r0,r1,r0
000010  4639              MOV      r1,r7
000012  f7fffffe          BL       __aeabi_uidivmod
;;;46         if(u32Delay == 0)
000016  2800              CMP      r0,#0
000018  d100              BNE      |L2.28|
;;;47             u32Delay++;
00001a  2001              MOVS     r0,#1
                  |L2.28|
00001c  2101              MOVS     r1,#1
;;;48         if(u32Ch == 0)
;;;49             DAC->CTL0 = (u32Delay << DAC_CTL_DACPWONSTBCNT_Pos) | u32TrgSrc | DAC_CTL_DACEN_Msk;
00001e  4c0f              LDR      r4,|L2.92|
000020  2e00              CMP      r6,#0                 ;48
000022  d00c              BEQ      |L2.62|
;;;50         else
;;;51             DAC->CTL1 = (u32Delay << DAC_CTL_DACPWONSTBCNT_Pos) | u32TrgSrc | DAC_CTL_DACEN_Msk;
000024  0200              LSLS     r0,r0,#8
000026  4328              ORRS     r0,r0,r5
000028  4308              ORRS     r0,r0,r1
00002a  6120              STR      r0,[r4,#0x10]
                  |L2.44|
;;;52     
;;;53         // DAC needs 2 us to stable after convert.
;;;54         u32Delay = CLK_GetHCLKFreq() * 2 / 1000000;
00002c  f7fffffe          BL       CLK_GetHCLKFreq
000030  0040              LSLS     r0,r0,#1
000032  4639              MOV      r1,r7
000034  f7fffffe          BL       __aeabi_uidivmod
;;;55         if(u32Delay == 0)
000038  2800              CMP      r0,#0
00003a  d005              BEQ      |L2.72|
00003c  e005              B        |L2.74|
                  |L2.62|
00003e  0200              LSLS     r0,r0,#8              ;49
000040  4328              ORRS     r0,r0,r5              ;49
000042  4308              ORRS     r0,r0,r1              ;49
000044  6020              STR      r0,[r4,#0]            ;49
000046  e7f1              B        |L2.44|
                  |L2.72|
;;;56             u32Delay++;
000048  2001              MOVS     r0,#1
                  |L2.74|
;;;57         DAC->COMCTL = (DAC->COMCTL & ~DAC_COMCTL_WAITDACCONV_Msk) | u32Delay;
00004a  6a21              LDR      r1,[r4,#0x20]
00004c  0a09              LSRS     r1,r1,#8
00004e  0209              LSLS     r1,r1,#8
000050  4301              ORRS     r1,r1,r0
000052  6221              STR      r1,[r4,#0x20]
;;;58     }
000054  bdf8              POP      {r3-r7,pc}
;;;59     
                          ENDP

000056  0000              DCW      0x0000
                  |L2.88|
                          DCD      0x000f4240
                  |L2.92|
                          DCD      0x400a0000

                          AREA ||i.DAC_SetDelayTime||, CODE, READONLY, ALIGN=2

                  DAC_SetDelayTime PROC
;;;93       */
;;;94     int DAC_SetDelayTime(DAC_T *dac, uint32_t u32Delay)
000000  b510              PUSH     {r4,lr}
;;;95     {
000002  460c              MOV      r4,r1
;;;96         uint32_t u32Dly;
;;;97     
;;;98         // DAC needs 2 us to stable after DAC convert, calculate minimal setting
;;;99         u32Dly = CLK_GetHCLKFreq() * 2 / 1000000;
000004  f7fffffe          BL       CLK_GetHCLKFreq
000008  0040              LSLS     r0,r0,#1
00000a  4909              LDR      r1,|L3.48|
00000c  f7fffffe          BL       __aeabi_uidivmod
;;;100        if(u32Dly == 0)
000010  2800              CMP      r0,#0
000012  d100              BNE      |L3.22|
;;;101            u32Dly++;
000014  2001              MOVS     r0,#1
                  |L3.22|
;;;102    
;;;103        if(u32Delay < u32Dly)  // return error id stable time is shorter than 2us
000016  4284              CMP      r4,r0
000018  d202              BCS      |L3.32|
;;;104            return -1;
00001a  2000              MOVS     r0,#0
00001c  43c0              MVNS     r0,r0
;;;105        DAC->COMCTL = (DAC->COMCTL & ~DAC_COMCTL_WAITDACCONV_Msk) | u32Delay;
;;;106        return 0;
;;;107    }
00001e  bd10              POP      {r4,pc}
                  |L3.32|
000020  4804              LDR      r0,|L3.52|
000022  6a01              LDR      r1,[r0,#0x20]         ;105
000024  0a09              LSRS     r1,r1,#8              ;105
000026  0209              LSLS     r1,r1,#8              ;105
000028  4321              ORRS     r1,r1,r4              ;105
00002a  6201              STR      r1,[r0,#0x20]         ;105
00002c  2000              MOVS     r0,#0                 ;106
00002e  bd10              POP      {r4,pc}
;;;108    
                          ENDP

                  |L3.48|
                          DCD      0x000f4240
                  |L3.52|
                          DCD      0x400a0000

;*** Start embedded assembler ***

#line 1 "..\\..\\Library\\StdDriver\\src\\dac.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_dac_c_DAC_Open____REV16|
#line 388 "..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_dac_c_DAC_Open____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_dac_c_DAC_Open____REVSH|
#line 402
|__asm___5_dac_c_DAC_Open____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
