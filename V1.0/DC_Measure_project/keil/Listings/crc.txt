; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\crc.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\crc.d --cpu=Cortex-M0 --apcs=interwork --diag_suppress=9931 -I..\..\Library\StdDriver\inc -I..\..\Library\Device\Nuvoton\Nano100Series\Include -I..\..\Library\CMSIS\Include -I..\bsp\bus\inc -I..\bsp\devices\inc -I..\User\inc -I.\RTE\_DC_Measure -ID:\software\tools\Keil_v5\Nuvoton\NuMicro_DFP\1.3.12\Device\NANO100BN\Include -ID:\software\tools\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=530 -D_RTE_ --omf_browse=.\objects\crc.crf ..\..\Library\StdDriver\src\crc.c]
                          THUMB

                          AREA ||i.CRC_GetChecksum||, CODE, READONLY, ALIGN=2

                  CRC_GetChecksum PROC
;;;75      */
;;;76     uint32_t CRC_GetChecksum(void)
000000  480d              LDR      r0,|L1.56|
;;;77     {
;;;78         switch (PDMACRC->CTL & DMA_CRC_CTL_CRC_MODE_Msk)
000002  6800              LDR      r0,[r0,#0]
000004  2101              MOVS     r1,#1
000006  0f80              LSRS     r0,r0,#30
000008  0780              LSLS     r0,r0,#30
00000a  07c9              LSLS     r1,r1,#31
00000c  1840              ADDS     r0,r0,r1
;;;79         {
;;;80         case CRC_CCITT:
;;;81         case CRC_16:
;;;82             return (PDMACRC->CHECKSUM & 0xffff);
00000e  490b              LDR      r1,|L1.60|
000010  d00c              BEQ      |L1.44|
000012  2203              MOVS     r2,#3                 ;78
000014  0792              LSLS     r2,r2,#30             ;78
000016  1880              ADDS     r0,r0,r2              ;78
000018  d00b              BEQ      |L1.50|
00001a  1880              ADDS     r0,r0,r2              ;78
00001c  d006              BEQ      |L1.44|
00001e  42d0              CMN      r0,r2                 ;78
000020  d102              BNE      |L1.40|
;;;83     
;;;84         case CRC_32:
;;;85             return (PDMACRC->CHECKSUM);
;;;86     
;;;87         case CRC_8:
;;;88             return (PDMACRC->CHECKSUM & 0xff);
000022  6888              LDR      r0,[r1,#8]
000024  b2c0              UXTB     r0,r0
;;;89     
;;;90         default:
;;;91             return 0;
;;;92         }
;;;93     }
000026  4770              BX       lr
                  |L1.40|
000028  2000              MOVS     r0,#0                 ;91
00002a  4770              BX       lr
                  |L1.44|
00002c  6888              LDR      r0,[r1,#8]            ;82
00002e  b280              UXTH     r0,r0                 ;82
000030  4770              BX       lr
                  |L1.50|
000032  6888              LDR      r0,[r1,#8]            ;85
000034  4770              BX       lr
;;;94     
                          ENDP

000036  0000              DCW      0x0000
                  |L1.56|
                          DCD      0x50008e00
                  |L1.60|
                          DCD      0x50008e80

                          AREA ||i.CRC_Open||, CODE, READONLY, ALIGN=2

                  CRC_Open PROC
;;;40      */
;;;41     void CRC_Open(uint32_t u32Mode, uint32_t u32Attribute, uint32_t u32Seed, uint32_t u32DataLen)
000000  b570              PUSH     {r4-r6,lr}
;;;42     {
;;;43         PDMAGCR->GCRCSR |= DMA_GCR_GCRCSR_CRC_CLK_EN_Msk;
000002  4c0a              LDR      r4,|L2.44|
000004  6825              LDR      r5,[r4,#0]
000006  2601              MOVS     r6,#1
000008  0636              LSLS     r6,r6,#24
00000a  4335              ORRS     r5,r5,r6
00000c  6025              STR      r5,[r4,#0]
;;;44         PDMACRC->SEED = u32Seed;
00000e  4c07              LDR      r4,|L2.44|
000010  3c80              SUBS     r4,r4,#0x80
000012  6062              STR      r2,[r4,#4]
;;;45         PDMACRC->CTL = u32Mode | u32Attribute | u32DataLen | DMA_CRC_CTL_CRCCEN_Msk;
000014  4308              ORRS     r0,r0,r1
000016  4318              ORRS     r0,r0,r3
000018  2101              MOVS     r1,#1
00001a  4308              ORRS     r0,r0,r1
00001c  4904              LDR      r1,|L2.48|
00001e  6008              STR      r0,[r1,#0]
;;;46         /* When operated in CPU PIO mode, setting RST bit will reload the initial seed value (CRC_SEED register) */
;;;47         PDMACRC->CTL |= DMA_CRC_CTL_CRC_RST_Msk;
000020  6808              LDR      r0,[r1,#0]
000022  2202              MOVS     r2,#2
000024  4310              ORRS     r0,r0,r2
000026  6008              STR      r0,[r1,#0]
;;;48     }
000028  bd70              POP      {r4-r6,pc}
;;;49     
                          ENDP

00002a  0000              DCW      0x0000
                  |L2.44|
                          DCD      0x50008f00
                  |L2.48|
                          DCD      0x50008e00

                          AREA ||i.CRC_StartDMATransfer||, CODE, READONLY, ALIGN=2

                  CRC_StartDMATransfer PROC
;;;59      */
;;;60     void CRC_StartDMATransfer(uint32_t u32SrcAddr, uint32_t u32ByteCount)
000000  4a04              LDR      r2,|L3.20|
;;;61     {
;;;62         PDMACRC->DMASAR = u32SrcAddr;
000002  6050              STR      r0,[r2,#4]
;;;63         PDMACRC->DMABCR = u32ByteCount;
000004  60d1              STR      r1,[r2,#0xc]
;;;64         PDMACRC->CTL |= DMA_CRC_CTL_TRIG_EN_Msk;
000006  6810              LDR      r0,[r2,#0]
000008  2101              MOVS     r1,#1
00000a  05c9              LSLS     r1,r1,#23
00000c  4308              ORRS     r0,r0,r1
00000e  6010              STR      r0,[r2,#0]
;;;65     }
000010  4770              BX       lr
;;;66     
                          ENDP

000012  0000              DCW      0x0000
                  |L3.20|
                          DCD      0x50008e00

;*** Start embedded assembler ***

#line 1 "..\\..\\Library\\StdDriver\\src\\crc.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_crc_c_CRC_Open____REV16|
#line 388 "..\\..\\Library\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___5_crc_c_CRC_Open____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_crc_c_CRC_Open____REVSH|
#line 402
|__asm___5_crc_c_CRC_Open____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
